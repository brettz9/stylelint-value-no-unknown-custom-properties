{"version":3,"file":"index.mjs","sources":["src/lib/rule-name.js","src/lib/messages.js","src/lib/validate-decl.js","src/lib/validate-result.js","src/lib/get-custom-properties-from-root.js","src/lib/get-custom-properties-from-imports.js","src/index.js"],"sourcesContent":["export default 'csstools/value-no-unknown-custom-properties';\n","import stylelint from 'stylelint';\nimport ruleName from './rule-name';\n\nexport default stylelint.utils.ruleMessages(ruleName, {\n\tearlyReference: (name, prop) => `Custom property \"${name}\" referenced too early (inside declaration \"${prop}\").`,\n\tunexpected: (name, prop) => `Unexpected custom property \"${name}\" inside declaration \"${prop}\".`,\n});\n","import stylelint from 'stylelint';\nimport { parse } from 'postcss-values-parser';\nimport ruleName from './rule-name';\nimport messages from './messages';\n\n// validate css declarations\nexport default (decl, { result, customProperties, rejectBadPrefallbacks }) => {\n\tconst valueAST = parse(decl.value);\n\n\tvalidateValueAST(valueAST, { result, customProperties, decl, rejectBadPrefallbacks });\n};\n\n// validate a value ast\nconst validateValueAST = (ast, { result, customProperties, decl, rejectBadPrefallbacks }) => {\n\tif (Object(ast.nodes).length) {\n\t\tast.nodes.forEach(node => {\n\t\t\tif (isVarFunction(node)) {\n\t\t\t\tconst [propertyNode, /* comma */, ...fallbacks] = node.nodes;\n\t\t\t\tconst propertyName = propertyNode.value;\n\n\t\t\t\tif (propertyName in customProperties) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// conditionally test fallbacks\n\t\t\t\tif (fallbacks.length) {\n\t\t\t\t\tvalidateValueAST({ nodes: fallbacks.filter(isVarFunction) }, { result, customProperties, decl, rejectBadPrefallbacks });\n\n\t\t\t\t\tif (!rejectBadPrefallbacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// report unknown custom properties\n\t\t\t\tstylelint.utils.report({\n\t\t\t\t\tmessage: messages.unexpected(propertyName, decl.prop),\n\t\t\t\t\tnode: decl,\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t\tword: String(propertyName)\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tvalidateValueAST(node, { result, customProperties, decl, rejectBadPrefallbacks });\n\t\t\t}\n\t\t});\n\t}\n};\n\n// whether the node is a var() function\nexport const isVarFunction = node => node.type === 'func' && node.name === 'var' && node.nodes[0].isVariable;\n","import validateDecl from './validate-decl';\n\n// validate the css root\nexport default (result, customProperties, rejectBadPrefallbacks) => {\n\t// validate each declaration\n\tresult.root.walkDecls(decl => {\n\t\tif (hasCustomPropertyReference(decl)) {\n\t\t\tvalidateDecl(decl, { result, customProperties, rejectBadPrefallbacks });\n\t\t}\n\t});\n};\n\n// match custom property inclusions\nconst customPropertyReferenceRegExp = /(^|[^\\w-])var\\([\\W\\w]+\\)/;\n\n// whether a declaration references a custom property\nexport const hasCustomPropertyReference = decl => customPropertyReferenceRegExp.test(decl.value);\n","import { promises as fs } from 'fs';\nimport path from 'path';\nimport postcss from 'postcss';\nimport stylelint from 'stylelint';\nimport { parse } from 'postcss-values-parser';\nimport {hasCustomPropertyReference} from './validate-result';\nimport {isVarFunction} from './validate-decl';\nimport messages from './messages';\nimport ruleName from './rule-name';\n\n// return custom selectors from the css root, conditionally removing them\nexport default async function getCustomPropertiesFromRoot(root, result, priorCustomPropertyReferences) {\n\t// initialize custom selectors\n\tlet customProperties = {};\n\n\t// resolve current file directory\n\tlet sourceDir = __dirname;\n\tif (root.source && root.source.input && root.source.input.file) {\n\t\tsourceDir = path.dirname(root.source.input.file);\n\t}\n\n\t// recursively add custom properties from @import statements\n\tconst importPromises = [];\n\troot.walkAtRules('import', atRule => {\n\t\tconst fileName = atRule.params.replace(/['|\"]/g, '');\n\t\tconst resolvedFileName = path.resolve(sourceDir, fileName);\n\t\timportPromises.push(getCustomPropertiesFromCSSFile(resolvedFileName, result, priorCustomPropertyReferences));\n\t});\n\n\t(await Promise.all(importPromises)).forEach(propertiesFromImport => {\n\t\tcustomProperties = Object.assign(customProperties, propertiesFromImport);\n\t});\n\n\tfunction checkAST (ast, decl) {\n\t\tif (Object(ast.nodes).length) {\n\t\t\tast.nodes.forEach(node => {\n\t\t\t\tif (isVarFunction(node)) {\n\t\t\t\t\tconst [propertyNode, /* comma */ , ...fallbacks] = node.nodes;\n\t\t\t\t\tconst propertyName = propertyNode.value;\n\t\t\t\t\tpriorCustomPropertyReferences.set(propertyName, decl);\n\n\t\t\t\t\tif (fallbacks.length) {\n\t\t\t\t\t\tcheckAST({ nodes: fallbacks.filter(isVarFunction) }, decl);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcheckAST(node, decl);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t// for each custom property declaration\n\troot.walkDecls(decl => {\n\t\t// Add any uses to collection along the way\n\t\tif (priorCustomPropertyReferences && hasCustomPropertyReference(decl)) {\n\t\t\tconst ast = parse(decl.value);\n\t\t\tcheckAST(ast, decl);\n\t\t}\n\t\tconst { prop } = decl;\n\t\tif (!customPropertyRegExp.test(prop)) {\n\t\t\treturn;\n\t\t}\n\t\t// Discard uses if not found by time of declaration\n\n\t\tif (priorCustomPropertyReferences && priorCustomPropertyReferences.has(prop)) {\n\t\t\tconst dec = priorCustomPropertyReferences.get(prop);\n\t\t\tstylelint.utils.report({\n\t\t\t\tmessage: messages.earlyReference(prop, dec.prop),\n\t\t\t\tnode: dec,\n\t\t\t\tresult,\n\t\t\t\truleName,\n\t\t\t\tword: String(prop)\n\t\t\t});\n\t\t\tpriorCustomPropertyReferences.delete(prop);\n\t\t}\n\n\t\t// write the parsed value to the custom property\n\t\tcustomProperties[prop] = decl.value;\n\t});\n\n\t// return all custom properties, preferring :root properties over html properties\n\treturn customProperties;\n}\n\n// match custom properties\nconst customPropertyRegExp = /^--[A-z][\\w-]*$/;\n\n\nasync function getCustomPropertiesFromCSSFile(from, result, priorCustomPropertyReferences) {\n\ttry {\n\t\tconst css = await fs.readFile(from, 'utf8');\n\t\tconst root = postcss.parse(css, { from });\n\n\t\treturn await getCustomPropertiesFromRoot(root, result, priorCustomPropertyReferences);\n\t} catch (e) {\n\t\treturn {};\n\t}\n}\n","import fs from 'fs';\nimport path from 'path';\nimport postcss from 'postcss';\nimport getCustomPropertiesFromRoot from './get-custom-properties-from-root';\n\n/* Get Custom Properties from CSS File\n/* ========================================================================== */\n\nasync function getCustomPropertiesFromCSSFile(from, result, map) {\n\tconst css = await readFile(from);\n\tconst root = postcss.parse(css, { from });\n\n\treturn await getCustomPropertiesFromRoot(root, result, map);\n}\n\n/* Get Custom Properties from Object\n/* ========================================================================== */\n\nfunction getCustomPropertiesFromObject(object) {\n\tconst customProperties = Object.assign(\n\t\t{},\n\t\tObject(object).customProperties,\n\t\tObject(object)['custom-properties']\n\t);\n\n\treturn customProperties;\n}\n\n/* Get Custom Properties from JSON file\n/* ========================================================================== */\n\nasync function getCustomPropertiesFromJSONFile(from) {\n\tconst object = await readJSON(from);\n\n\treturn getCustomPropertiesFromObject(object);\n}\n\n/* Get Custom Properties from JS file\n/* ========================================================================== */\n\nasync function getCustomPropertiesFromJSFile(from) {\n\tconst object = await import(from);\n\n\treturn getCustomPropertiesFromObject(object);\n}\n\n/* Get Custom Properties from Sources\n/* ========================================================================== */\n\nexport default function getCustomPropertiesFromSources(sources, {priorCustomPropertyReferences, result}) {\n\treturn sources.map(source => {\n\t\tif (source instanceof Promise) {\n\t\t\treturn source;\n\t\t} else if (source instanceof Function) {\n\t\t\treturn source();\n\t\t}\n\n\t\t// read the source as an object\n\t\tconst opts = source === Object(source) ? source : { from: String(source) };\n\n\t\t// skip objects with Custom Properties\n\t\tif (opts.customProperties || opts['custom-properties']) {\n\t\t\treturn opts\n\t\t}\n\n\t\t// source pathname\n\t\tconst from = path.resolve(String(opts.from || ''));\n\n\t\t// type of file being read from\n\t\tconst type = (opts.type || path.extname(from).slice(1)).toLowerCase();\n\n\t\treturn { type, from };\n\t}).reduce(async (customProperties, source) => {\n\t\tconst { type, from } = await source;\n\n\t\tif (type === 'css') {\n\t\t\treturn Object.assign(await customProperties, await getCustomPropertiesFromCSSFile(from, result, priorCustomPropertyReferences));\n\t\t}\n\n\t\tif (type === 'js') {\n\t\t\treturn Object.assign(await customProperties, await getCustomPropertiesFromJSFile(from));\n\t\t}\n\n\t\tif (type === 'json') {\n\t\t\treturn Object.assign(await customProperties, await getCustomPropertiesFromJSONFile(from));\n\t\t}\n\n\t\treturn Object.assign(await customProperties, await getCustomPropertiesFromObject(await source));\n\t}, {});\n}\n\n/* Promise-ified utilities\n/* ========================================================================== */\n\nconst readFile = from => new Promise((resolve, reject) => {\n\tfs.readFile(from, 'utf8', (error, result) => {\n\t\t// With `createRuleTester` removed, may wish to switch to anoher testing\n\t\t// framework or tool like https://github.com/csstools/stylelint-tape :\n\t\t// https://github.com/stylelint/stylelint/issues/4267\n\t\t// istanbul ignore if -- tape testing framework not handling rejections\n\t\tif (error) {\n\t\t\treject(error);\n\t\t} else {\n\t\t\tresolve(result);\n\t\t}\n\t});\n});\n\nconst readJSON = async from => JSON.parse(await readFile(from));\n","import stylelint from 'stylelint';\nimport getCustomPropertiesFromRoot from './lib/get-custom-properties-from-root';\nimport getCustomPropertiesFromImports from './lib/get-custom-properties-from-imports';\nimport validateResult from './lib/validate-result';\nimport ruleName from './lib/rule-name';\n\nexport default stylelint.createPlugin(ruleName, (method, opts) => {\n\t// sources to import custom selectors from\n\tconst {\n\t\timportFrom = [],\n\t\treportEarlyUses = false,\n\t\trejectBadPrefallbacks = false\n\t} = Object(opts);\n\n\tconst imprtFrom = [].concat(importFrom);\n\n\tconst priorCustomPropertyReferences = reportEarlyUses\n\t\t? new Map()\n\t\t: null;\n\n\treturn async (root, result) => {\n\t\t// promise any custom selectors are imported\n\t\tconst customPropertiesPromise = isMethodEnabled(method)\n\t\t\t? getCustomPropertiesFromImports(imprtFrom, {\n\t\t\t\tpriorCustomPropertyReferences, result\n\t\t\t})\n\t\t: {};\n\n\t\t// validate the method\n\t\tconst isMethodValid = stylelint.utils.validateOptions(result, ruleName, {\n\t\t\tactual: method,\n\t\t\tpossible() {\n\t\t\t\treturn isMethodEnabled(method) || isMethodDisabled(method);\n\t\t\t}\n\t\t});\n\n\t\tif (isMethodValid && isMethodEnabled(method)) {\n\t\t\t// all custom properties from the file and imports\n\t\t\tconst customProperties = Object.assign(\n\t\t\t\tawait customPropertiesPromise,\n\t\t\t\tawait getCustomPropertiesFromRoot(root, result, priorCustomPropertyReferences)\n\t\t\t);\n\t\t\t// validate the css root\n\t\t\tvalidateResult(result, customProperties, rejectBadPrefallbacks);\n\t\t}\n\t};\n});\n\nexport { ruleName }\n\nconst isMethodEnabled = method => method === true;\nconst isMethodDisabled = method => method === null || method === false;\n"],"names":["stylelint","utils","ruleMessages","ruleName","earlyReference","name","prop","unexpected","decl","result","customProperties","rejectBadPrefallbacks","valueAST","parse","value","validateValueAST","ast","Object","nodes","length","forEach","node","isVarFunction","propertyNode","fallbacks","propertyName","filter","report","message","messages","word","String","type","isVariable","root","walkDecls","hasCustomPropertyReference","validateDecl","customPropertyReferenceRegExp","test","getCustomPropertiesFromRoot","priorCustomPropertyReferences","sourceDir","__dirname","source","input","file","path","dirname","importPromises","walkAtRules","atRule","fileName","params","replace","resolvedFileName","resolve","push","getCustomPropertiesFromCSSFile","Promise","all","propertiesFromImport","assign","checkAST","set","customPropertyRegExp","has","dec","get","delete","from","css","fs","readFile","postcss","e","map","getCustomPropertiesFromObject","object","getCustomPropertiesFromJSONFile","readJSON","getCustomPropertiesFromJSFile","getCustomPropertiesFromSources","sources","Function","opts","extname","slice","toLowerCase","reduce","reject","error","JSON","createPlugin","method","importFrom","reportEarlyUses","imprtFrom","concat","Map","customPropertiesPromise","isMethodEnabled","getCustomPropertiesFromImports","isMethodValid","validateOptions","actual","possible","isMethodDisabled","validateResult"],"mappings":"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"}